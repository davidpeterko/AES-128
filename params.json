{"name":"Ko Encryption","tagline":"","body":"### Ko Encryption\r\n\r\n##Who was it for?\r\n\r\nThis was a project for myself for being able to encrypt sensitive data. \r\n\r\n## What was it?\r\n\r\nIt is an encryption algorithm based on AES 256. It has the underlying components of AES; the diffusion and confusion, but with another twist to try and make AES even stronger than it already is.\r\n\r\n## When was it?\r\n\r\nI recently started working on this project, within the last 2 months.\r\n\r\n##Where was this?\r\n\r\nI have been working on this back and forth between my home and the computer lab on the campus of the University of Texas.\r\n\r\n#Why was it done?\r\n\r\nTest my Java programming skills and knowledge of cryptography to try and create a better encryption scheme.\r\n\r\n## How was it done?\r\n\r\nBy writing an AES 256 implementation by myself in Java, I slowly picked apart different parts of the AES that I wanted to modify for myself. I do not want to give away the specifics because that would defeat the purpose of having an encryption if they would reverse engineer the decryption. But heres a hint: it modifies the 4 components of AES (addRoundKeys, mixColumns, etc) and it may or may not try and apply transposition and substitution at unspecified places! Good luck!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}